.story{
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, .1);
    background-color: rgba($color-white, .5);
    border-radius: 3px;
    padding: 6rem;
    padding-left: 9rem;
    font-size: $default-font-size;
    transform:skewX(-12deg);            //Makes all the childs skewed
    
    @include respond(tab-port){
        width: 100%;
        padding: 4rem;
        padding-left: 7rem;

    }
    @include respond(phone){
        transform: skew(0);

    }
    &>*{
        transform: skewX(12deg);            //To remove all the childs from skewed property
    }
    &__shape{
        position: relative;
        width: 15rem;
        height: 15rem;
        float: left;
        shape-outside: circle(50% at 50% 50%);      //Determines how the elements should float around it. 
                                                    //Works only when element is floated.
                                                    //For float, height and width should be specified.
        clip-path: circle(50% at 50% 50%);
        transform: translateX(-3rem) skewX(12deg);      //We have to mention explicitly for .story__shape because it would take the translate property later declared only.
        @include respond(phone){
            transform: translateX(-3rem) skew(0);
        }
    
    }
    &__image{
        height: 100%;
        transform: translateX(-4rem) scale(1.2);
        transition: all .5s;
    }
    &__caption{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%);
        color: $color-white;
        text-transform: uppercase;
        font-size: 1.7rem;
        text-align: center;
        opacity: 0;
        transition: all .5s;
        backface-visibility: hidden;
    }
    &__text{
        transform: skewX(12deg);
        @include respond(phone){
            transform:  skew(0);
        }

    }
    &:hover &__caption{
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    &:hover &__image{
        transform: translateX(-4rem) scale(1);
        filter: blur(3px) brightness(80%);
    }
}
