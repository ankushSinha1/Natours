.btn{
    &:link,
    &:visited{
        /*A psuedo-class is a special state of a selector. Here link is psuedo-class of the btn selector*/
        /*Other psuedo-classes would be - hover, active, checkbox is clicked etc...*/
        /*:link is for the element(containing href) which is not yet visited.*/
        /*:visited is for the element(containing href) which is already visited atleast once.*/
        position: relative;
        border-radius: 200px;
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        transition: all 0.1s; /*For basic animations. It selects all the animation, movement etc. and give it a time-duration of .2s*/
        /*transition property is always declared in the initial state of an element.  */
        font-size: $default-font-size;
    }
    &:hover{
        /*When mouse hovers over &*/
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);  /*X Y blur color*/
        &::after{
            /*an ::after pseudo element only when th .btn is in hover state*/
            transform: scaleX(2) scaleY(1.8);
            opacity: 0;
        }
    
    }
    &:active{
        /*When & is clicked*/
        transform: translateY(-1px);
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);   /*X Y blur color*/
    }
    
    &::after{
        /*This is like a child of the &. We have to make it exactly like the &. And then, we put it behind &. */
        content: "";    /*If we want to have this pseudo element on our webpage, we have to specify content!!! 
        Even if it is empty.
        This is always done!!*/
        display: inline-block; /*Just like content, dislplay property is also necessary.*/
        height: 100%;
        width: 100%;
        border-radius: 20rem;
        position: absolute; /*For the animation to come from the back of the button*/
        top: 0;
        left: 0;
        z-index: -1;    /*Placing &::after in back*/
        transition: all .4s;
        background-color: white; 
    }
    &--white{
        background-color: $color-white;
        color:$color-grey-dark;
        ::after{
            background-color: $color-white;
        }
    }
    &--green{
        background-color: $color-primary;
        color: $color-white;
        &::after{
            background-color: $color-primary;
        }
    }
    
    &--animated{
        animation: moveInTop .5s ease-out .75s;
        animation-fill-mode: backwards; /*This sets the initial (0%) values of animation in the element(&)*/
    }
}
.btn-text{
    &:link, &:visited{
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        font-size: $default-font-size;
        transition: all .2s;
    }
    &:hover{
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
        transform: translateY(-2px);
    }
    &:active{
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
        transform: translateY(0);

    }
}