.card{
    //Perspective property in css is used to define how far the object is from the user.
    //The more the value, the better it looks(upto a certain point)
    perspective: 150rem;
    -moz-perspective: 150rem;
    position: relative; //Because we want the front and back sides of each card to coincide
    height: 50rem;
    &__side{
        height: 50rem;      //Specifying the same height as the parent became necessary here coz we gave 
                            //position: absolute; to child card__side, which made the height to collapse to 0px
                            //(similar to making all childs as float. Here we do not have a fix to this like 
                            //clear-fix method, hence height is needed to be specified.)
        transition: all .8s ease;
        position: absolute;         //To make both sides of the card coincide.
        top: 0;
        left: 0;
        width: 100%;
        backface-visibility: hidden;    //It hides the back part of any element (not the &--back we defined but the default one 
                                        //(where we saw the text reversed and starting from the right side))
        border-radius: 3px;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        overflow: hidden;       //Hides the overflow of any child element
        //Designing both sides of the card seperately
        &--front{
            background-color: $color-white;
        }
        &--back{
            //Initially the back side of the card should be rotated to -180deg so that when we hover, the backside comes from the correct direction.
            //Or else, we would just see a half rotation
            transform: rotateY(-180deg);
            &-1{
                //Linear-gradient is used with background-image and not background-color
                background-image: linear-gradient(
                    to right bottom,
                    $color-secondary-light,
                    $color-secondary-dark
                );
            }
            &-2{
                background-image: linear-gradient(
                    to right bottom,
                    $color-primary-light,
                    $color-primary-dark
                );
            }
            &-3{
                background-image: linear-gradient(
                    to right bottom,
                    $color-tertiary-light,
                    $color-tertiary-dark
                );
                
            }
        }
    }
    &:hover &__side--front{
        transform: rotateY(180deg);
    }
    &:hover &__side--back{
        //To get the rotated back side of the card to its original position so that we are able to see it properly
        transform: rotateY(0);
    }

    &__picture{
        background-size: cover;
        height: 23rem;
        background-blend-mode:screen;       //This gives us a color composition of the background-images(color gradient and img);
        clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
        &--1{
            background-image:linear-gradient(
                to right bottom,
                $color-secondary-light,
                $color-secondary-dark
            ), url('../img/nat-5.jpg');      //location has to be provided with respect to the location of styles.css
        }
        &--2{
            background-image: linear-gradient(
                to right bottom,
                $color-primary-light,
                $color-primary-dark
            ),url('../img/nat-6.jpg');      //location has to be provided with respect to the location of styles.css
        }
        &--3{
            background-image:linear-gradient(
                to right bottom,
                $color-tertiary-light,
                $color-tertiary-dark
            ), url('../img/nat-7.jpg');      //location has to be provided with respect to the location of styles.css
        }
    }
    &__heading{
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 8rem;
        right: 2rem;
        width: 75%;
    }
    &__heading-span{
        padding: 1rem 1.5rem;
        box-decoration-break: clone;    //This will treat all broken text as seperate 
                                        //elements and not a single heading so that padding is applied uniformly on each broken element
        -webkit-box-decoration-break: clone;
        &--1{
            background-image: linear-gradient(to right bottom, 
                rgba($color-secondary-light, .7),
                rgba($color-secondary-dark, .7)
            
            );
        }
        &--2{
            background-image: linear-gradient(to right bottom, 
                rgba($color-primary-light, .7),
                rgba($color-primary-dark, .7)
            
            );
        }
        &--3{
            background-image: linear-gradient(to right bottom, 
                rgba($color-tertiary-light, .7),
                rgba($color-tertiary-dark, .7)
            
            );
        }
    }
    &__details{
        ul{
            list-style:none;
            width: 100%;
            text-align: center;
            li{
                margin: 0 auto;
                font-size: 1.5rem;
                padding: 1rem;
                &:not(:last-child){
                    border-bottom: 1px solid $color-grey-light-2;
                }
            }
        }
    }
    &__cta{
        position: absolute;
        text-align: center;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
    }
    &__price-box{
        text-align: center;
        margin-bottom: 8rem;
        color: $color-white;   
    }
    &__price-only{
        font-size: 1.4rem;
        text-transform: uppercase;
    }
    &__price-value{
        font-size: 6rem;
        font-weight: 100;

    }
    //Previously we added @include respond, with which it's impossible to add multiple conditions. 
    //So we have to write the media query explicitly here in order to have multiple conditions
    @media only screen and (max-width: 56.25em),
    only sreen and (hover:none)         //Checks for touch devices
    {
        height: auto;
        border-radius: 3px;
        background-color: $color-white;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        &__side{
            height: auto;
            position: relative;
            box-shadow: none;
            &--back{
                transform: rotateY(0);
                clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
            }
        }
        &:hover &__side--front{
            transform: rotateY(0);
        }   
        &__details{
            ul{
                width: 100%;
            }
        }
        &__cta{
            position: relative;
            top: 0;
            left: 0;
            transform: translate(0);
            width: 100%;
            padding: 7rem  4rem;
        }
        &__price-box{
            margin-bottom: 3rem;
        }
        &__price-value{
            font-size: 4rem;
        }   
    }

}